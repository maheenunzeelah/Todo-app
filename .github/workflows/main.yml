# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
      AWS_REGION: us-east-1                  # set this to your preferred AWS region, e.g. us-west-1
      APPLICATION_NAME: multi-docker
      ENVIRONMENT_NAME: docker-env-4
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
 
      - name: Check Out Repo 
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_ID}}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Runs a set of commands using the runners shell
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push
        id: docker_build_client
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_ID }}/frontend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
  deploy:
      name: Deploy
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Generate deployment package
          run: zip -r deploy.zip . -x '*.git*'

        - name: Get timestamp
          uses: gerred/actions/current-time@master
          id: current-time
        
        - name: Run string replace
          uses: frabert/replace-string-action@master
          id: format-time
          with:
            pattern: '[:\.]+'
            string: "${{ steps.current-time.outputs.time }}"
            replace-with: '-'
            flags: 'g'  
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1
            aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        - name: Upload on beanstalk
          uses: einaregilsson/beanstalk-deploy@v16  
          with:
             aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
             version_label: todo-deployment-${{ steps.format-time.outputs.replaced }}
             application_name: ${{ env.APPLICATION_NAME }}
             environment_name: ${{ env.ENVIRONMENT_NAME }}
             region: us-east-1
             deployment_package: deploy.zip
